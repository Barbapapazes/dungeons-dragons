(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{368:function(e,t,s){"use strict";s.r(t);var a=s(25),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"how-this-project-works"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-this-project-works"}},[e._v("#")]),e._v(" How this project works")]),e._v(" "),s("h2",{attrs:{id:"core"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#core"}},[e._v("#")]),e._v(" Core")]),e._v(" "),s("p",[e._v("The core of the project is inside the file "),s("code",[e._v("main.py")]),e._v(" and the file "),s("code",[e._v("window.py")]),e._v(" under the class "),s("code",[e._v("Window")]),e._v(".")]),e._v(" "),s("p",[e._v("First of all, the main function is "),s("code",[e._v("main")]),e._v(" under "),s("code",[e._v("Window")]),e._v(". This function is a loop where the state is run and the screen is updated.")]),e._v(" "),s("p",[e._v("These functions are able to manage screens !")]),e._v(" "),s("h2",{attrs:{id:"states"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#states"}},[e._v("#")]),e._v(" States")]),e._v(" "),s("p",[e._v("In the "),s("code",[e._v("main.py")]),e._v(" file, all the states, which are called screens in this project, are loaded, using the "),s("code",[e._v("setup_states")]),e._v(" function. They are classes which inherit from "),s("code",[e._v("_State")]),e._v(".")]),e._v(" "),s("p",[e._v("In the "),s("code",[e._v("Window")]),e._v(", there is a function called "),s("code",[e._v("flip_state")]),e._v(" which is called every time the screen change. The goal is to load the new state and keep some data from the previous state.")]),e._v(" "),s("h3",{attrs:{id:"operation-of-a-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operation-of-a-state"}},[e._v("#")]),e._v(" Operation of a state")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("run")]),e._v(" function from the "),s("code",[e._v("Window")]),e._v(" class run the "),s("code",[e._v("run")]),e._v(" function from the state. This function call a function depending of the chosen sub-state. For example, the "),s("code",[e._v("normal_run")]),e._v(" is the main loop of a classique pygame project, which is often call "),s("code",[e._v("main")]),e._v(". Inside, we can call the "),s("code",[e._v("update")]),e._v(", "),s("code",[e._v("events")]),e._v(" and "),s("code",[e._v("draw")]),e._v(" functions. The call of this is to have the same design that for a single screen game. Multiple screens is now easy !")]),e._v(" "),s("h3",{attrs:{id:"sub-states"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sub-states"}},[e._v("#")]),e._v(" Sub-states")]),e._v(" "),s("p",[e._v("Each state can have sub-states. This is useful to create sub-menu inside a screen or smooth transition between screens. Because of the function "),s("code",[e._v("run")]),e._v(" which choose the correct run function, from the "),s("code",[e._v("state_dict")]),e._v(", each frame, you've just to change the state name to change the loop.")]),e._v(" "),s("p",[e._v("If "),s("em",[e._v("done")]),e._v(" is set to true, the "),s("code",[e._v("flip_state")]),e._v(" function, from the "),s("code",[e._v("Window")]),e._v(" class, will load a new state, startup and the "),s("code",[e._v("global run")]),e._v(" loop will run the "),s("code",[e._v("state run")]),e._v(" loop, which run the sub-state function each frame !")])])}),[],!1,null,null,null);t.default=o.exports}}]);